%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% create_moment_error
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This function creates the error vector for the GMM equation. 
% Functions it requires:
% -	create_linear_vector
% -	assign_thetas


function errors=create_moment_error(parameter_vector,y_var,...
    size_vector,e1_dln_a_index,e1_theta_code,e1_theta_code_den,e1_occ_index)
    %Step 0: assign parameters
    splitted_vector=assign_parameters(parameter_vector,size_vector);

    theta=splitted_vector{1};
    d_ln_a=splitted_vector{2};
    sigma=splitted_vector{3};


    full_theta_vector=assign_thetas(theta,e1_theta_code);
    full_theta_vector_den=assign_thetas(theta,e1_theta_code_den);
    full_dlna_vector=assign_thetas(d_ln_a,e1_dln_a_index);
    full_sigma_vector=assign_thetas(sigma,e1_occ_index);

    %Step 1: compute the numerator of the ration
    e1_rhs=a_power.*full_dlna_vector+theta_power.*(log(full_theta_vector)-log(full_theta_vector_den));

    %Step 2: Compute rhs for the second equation
    %e2_rhs=e2s_matrix*theta;

    %rhs=vertcat(e1_rhs,e2_rhs);
    rhs=e1_rhs;

    errors=y_var-rhs;
end